name: Terraform plan reusable workflow

on:
  workflow_call:
    inputs:
      runs-on:
        description: The type of machine to run the job on. The machine can be either a GitHub-hosted runner, or a self-hosted runner.
        required: false
        type: string
        default: self-hosted
      git-ref:
        description: Git ref to checkout
        required: false
        type: string
        default: ${{ github.head_ref }}
      lock:
        description: "Terraform lock. If false - don't hold a state lock during the operation"
        required: false
        type: boolean
        default: true
      project-key:
        description: 'The key of the project used in github oidc AWS role'
        required: true
        type: string
      environment:
        description: Repo environment / terraform workspace name
        required: true
        type: string
      continue-on-error:
        description: 'If true - continue on error'
        required: false
        type: boolean
        default: false
      check-for-diff:
        description: Will also error if there is a diff between code and infrastructure
        required: false
        type: boolean
        default: false
      AWS_REGION:
        description: AWS region
        required: false
        type: string
        default: eu-central-1
    secrets:
      PAT:
        required: true
    outputs:
      status:
        value: ${{ jobs.terraform-plan.outputs.status }}

permissions:
  id-token: write
  contents: read
  packages: read

jobs:
  terraform-plan:
    continue-on-error: ${{ inputs.continue-on-error }}
    environment: ${{ inputs.environment }}
    runs-on: ${{ inputs.runs-on }}
    outputs:
      status: ${{ steps.plan.outputs.status }}
    steps:
      - name: Configure workflow to fetch private repos
        run: |
          git config --global url."https://foo:${{ secrets.PAT }}@github.com".insteadOf "ssh://git@github.com"
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.git-ref }}
          token: ${{ secrets.PAT }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/github-actions-${{ inputs.project-key }}-${{ inputs.environment }}
          role-session-name: ${{ inputs.project-key }}-${{ inputs.environment }}
          aws-region: ${{ inputs.AWS_REGION }}
      - name: "terraform-init::${{ inputs.environment }}"
        id: init
        run: |
          terraform init  -upgrade -backend-config=backend-configs/${{ inputs.environment }}-backend.tfvars && ./resources/tf_ws_select.sh ${{ inputs.environment }}
          terraform validate
      - name: "terraform-plan::${{ inputs.environment }}"
        id: plan
        run: |
          terraform plan -lock=${{ inputs.lock }} -var-file=${{ inputs.environment }}.tfvars -detailed-exitcode -out=tfplan-${{ inputs.project-key }}-${{ inputs.environment }}-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }} || error_code=$?
          case $error_code in 
            0)
              echo "status=ok" >> $GITHUB_OUTPUT
              exit 0
              ;;
            1)
              echo "status=error" >> $GITHUB_OUTPUT
              exit 1
              ;;
            2)
              if ${{ inputs.check-for-diff }} ; then
                echo "status=diff" >> $GITHUB_OUTPUT
                exit 2
              else
                echo "status=ok" >> $GITHUB_OUTPUT
                exit 0
              fi
              ;;
          esac
      - name: Upload tfplan for job "terraform-plan::${{ inputs.environment }}"
        uses: actions/upload-artifact@v3
        with:
          name: tfplan-${{ inputs.project-key }}-${{ inputs.environment }}-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
          path: tfplan-${{ inputs.project-key }}-${{ inputs.environment }}-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
