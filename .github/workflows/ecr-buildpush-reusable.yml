name: ECR build and push reusable workflow

on:
  workflow_call:
    inputs:
      runs-on:
        description: The type of machine to run the job on. The machine can be either a GitHub-hosted runner, or a self-hosted runner.
        required: false
        type: string
        default: ubuntu-latest
      tag:
        description: the tag of the image
        required: true
        type: string
      repo-name:
        description: the repo name for the image
        required: true
        type: string
      context:
        description: "Build's context is the set of files located in the specified PATH"
        required: false
        type: string
        default: .
      file:
        description: Relative path to the Dockerfile within the specified build context.
        required: false
        type: string
        default: Dockerfile
      project-key:
        description: 'The key of the project used in github oidc AWS role'
        required: true
        type: string
      environment:
        description: 'The terraform environment'
        required: true
        type: string
      aws-region:
        description: AWS region
        required: false
        type: string
        default: eu-central-1
      sign-in-docker-hub:
        type: boolean
        required: false
        default: true

permissions:
  id-token: write
  contents: read
  packages: read

jobs:
  build-push:
    environment: ${{ inputs.environment }}
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/github-actions-${{ inputs.project-key }}-${{ inputs.environment }}
          role-session-name: ${{ inputs.project-key }}-${{ inputs.environment }}
          aws-region: ${{ inputs.aws-region }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: "${{ vars.AWS_ACCOUNT_ID }}"
      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builders
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          endpoint: builders
      - name: Login to Docker Hub
        if: ${{ inputs.sign-in-docker-hub }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.context }}/${{ inputs.file }}
          push: true
          tags: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com/${{ inputs.repo-name }}:${{ inputs.tag }}
          cache-to: mode=max,image-manifest=true,oci-mediatypes=true,type=registry,ref=${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com/${{ inputs.repo-name }}:build-cache
          cache-from: type=registry,ref=${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com/${{ inputs.repo-name }}:build-cache

